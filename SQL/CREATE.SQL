-- PurpleBoxDVD Create Script

USE master;

-- drop PurpleBoxDVD database if it exists
IF EXISTS
(
	SELECT *
	FROM sys.sysdatabases
	WHERE name = 'PurpleBoxDVD'
)

DROP DATABASE PurpleBoxDVD;

-- create PurpleBoxDVD database
CREATE DATABASE PurpleBoxDVD

ON PRIMARY
(
	NAME = N'PurpleBoxDVD',
	FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\PurpleBoxDVD.mdf',
	SIZE = 5120KB,
	FILEGROWTH = 1024KB
)

-- create PurpleBoxDVD database log
LOG ON
(
	NAME = N'PurpleBoxDVDLog',
	FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\PurpleBoxDVDLog.ldf',
	SIZE = 2048KB,
	FILEGROWTH = 10%
)

-- batch delete/create database
GO

-- attach to new database
USE PurpleBoxDVD;

-- drop all tables if they exists
IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbPHONENO'
)

DROP TABLE pbPHONENO;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbBANNEDDESC'
)

DROP TABLE pbBANNEDDESC;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbUSERSECQA'
)

DROP TABLE pbUSERSECQA;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbSECQUESTION'
)

DROP TABLE pbSECQUESTION;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbRENTAL'
)

DROP TABLE pbRENTAL;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbREQUEST'
)

DROP TABLE pbREQUEST;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbUSER'
)

DROP TABLE pbUSER;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbMOVIEITEM'
)

DROP TABLE pbMOVIEITEM;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbFORMAT'
)

DROP TABLE pbFORMAT;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbMOVIEGENRE'
)

DROP TABLE pbMOVIEGENRE;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbGENRE'
)

DROP TABLE pbGENRE;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbMOVIEKEYWORD'
)

DROP TABLE pbMOVIEKEYWORD;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbKEYWORD'
)

DROP TABLE pbKEYWORD;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbMOVIEDIRECTOR'
)

DROP TABLE pbMOVIEDIRECTOR;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbDIRECTOR'
)

DROP TABLE pbDIRECTOR;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbMOVIEACTOR'
)

DROP TABLE pbMOVIEACTOR;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbACTOR'
)

DROP TABLE pbACTOR;

IF EXISTS
(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'pbMOVIE'
)

DROP TABLE pbMOVIE;

-- batch delete tables
GO

-- create all tables
CREATE TABLE pbUSER
(
	pbUser_ID SMALLINT NOT NULL IDENTITY(1,1),
	userPwd VARCHAR(20) NOT NULL,
	userFirstName VARCHAR(20) NOT NULL,
	userLastName VARCHAR(20) NOT NULL,
	userAddress VARCHAR(50) NOT NULL,
	userCity VARCHAR(20) NOT NULL,
	userState CHAR(2) NOT NULL,
	userZip CHAR(9) NOT NULL,
	userType CHAR(1) NOT NULL,
	userFees SMALLINT NOT NULL,
	userBannedStatus BIT NOT NULL
)

CREATE TABLE pbPHONENO
(
	pbPhoneNo_ID SMALLINT NOT NULL IDENTITY(1,1),
	pbUser_ID SMALLINT NOT NULL,
	phoneNo	VARCHAR(20) NULL
)

CREATE TABLE pbBANNEDDESC
(
	pbBannedDesc_ID	SMALLINT NOT NULL IDENTITY(1,1),
	pbUser_ID SMALLINT NOT NULL,
	bannedDesc VARCHAR(20) NOT NULL
)

CREATE TABLE pbSECQUESTION
(
	pbSecQ_ID SMALLINT NOT NULL IDENTITY(1,1),
	secQuestion VARCHAR(50) NOT NULL
)

CREATE TABLE pbUSERSECQA
(
	pbUserSecQA_ID SMALLINT NOT NULL IDENTITY(1,1),
	pbSecQ_ID SMALLINT NOT NULL,
	pbUser_ID SMALLINT NOT NULL,
	userSecA VARCHAR(20) NOT NULL
)

CREATE TABLE pbMOVIE
(
	pbMovie_ID SMALLINT NOT NULL IDENTITY(1,1),
	movieTitle VARCHAR(20) NOT NULL,
	movieDate DATE NOT NULL
)

CREATE TABLE pbFORMAT
(
	pbFormat_ID SMALLINT NOT NULL IDENTITY(1,1),
	formatName VARCHAR(20) NOT NULL
)

CREATE TABLE pbMOVIEITEM
(
	pbMovieItem_ID SMALLINT NOT NULL IDENTITY(1,1),
	pbMovie_ID SMALLINT NOT NULL,
	pbFormat_ID SMALLINT NOT NULL,
	movieItemCopyNo SMALLINT NOT NULL
)

CREATE TABLE pbRENTAL
(
	pbRental_ID SMALLINT NOT NULL IDENTITY(1,1),
	pbUser_ID SMALLINT NOT NULL,
	pbMovieItem_ID SMALLINT NOT NULL,
	rentalDate DATETIME NOT NULL,
	returnDate DATETIME NOT NULL
)

CREATE TABLE pbREQUEST
(
	pbRequest_ID SMALLINT NOT NULL IDENTITY(1,1),
	pbUser_ID SMALLINT NOT NULL,
	pbMovieItem_ID SMALLINT NOT NULL,
	reqDate DATETIME NOT NULL
)

CREATE TABLE pbGENRE
(
	pbGenre_ID SMALLINT NOT NULL IDENTITY(1,1),
	genre VARCHAR(20) NOT NULL
)

CREATE TABLE pbMOVIEGENRE
(
	pbMovieGenre_ID SMALLINT NOT NULL IDENTITY(1,1),
	pbMovie_ID SMALLINT NOT NULL,
	pbGenre_ID SMALLINT NOT NULL
)

CREATE TABLE pbKEYWORD
(
	pbKeyword_ID SMALLINT NOT NULL IDENTITY(1,1),
	keyword VARCHAR(20) NULL
)

CREATE TABLE pbMOVIEKEYWORD
(
	pbMovieKeyword_ID SMALLINT NOT NULL IDENTITY(1,1),
	pbMovie_ID SMALLINT NOT NULL,
	pbKeyword_ID SMALLINT NOT NULL
)

CREATE TABLE pbDIRECTOR
(
	pbDirector_ID SMALLINT NOT NULL IDENTITY(1,1),
	directorFirstName VARCHAR(20) NOT NULL,
	directorLastName VARCHAR(20) NOT NULL
)

CREATE TABLE pbMOVIEDIRECTOR
(
	pbMovieDirector_ID SMALLINT NOT NULL IDENTITY(1,1),
	pbDirector_ID SMALLINT NOT NULL,
	pbMovie_ID SMALLINT NOT NULL
)

CREATE TABLE pbACTOR
(
	pbActor_ID SMALLINT NOT NULL IDENTITY(1,1),
	actorFirstName VARCHAR(20) NOT NULL,
	actorLastName VARCHAR(20) NOT NULL
)

CREATE TABLE pbMOVIEACTOR
(
	pbMovieActor_ID SMALLINT NOT NULL IDENTITY(1,1),
	pbActor_ID SMALLINT NOT NULL,
	pbMovie_ID SMALLINT NOT NULL
)

-- batch create tables
GO

-- create primary keys
ALTER TABLE pbUSER
	ADD CONSTRAINT PK_USER
	PRIMARY KEY (pbUser_ID)

ALTER TABLE pbPHONENO
	ADD CONSTRAINT PK_PHONENO
	PRIMARY KEY (pbPhoneNo_ID)

ALTER TABLE pbBANNEDDESC
	ADD CONSTRAINT PK_BANNEDDESC
	PRIMARY KEY (pbBannedDesc_ID)

ALTER TABLE pbSECQUESTION
	ADD CONSTRAINT PK_SECQUESTION
	PRIMARY KEY (pbSecQ_ID)

ALTER TABLE pbUSERSECQA
	ADD CONSTRAINT PK_USERSECQA
	PRIMARY KEY (pbUserSecQA_ID)

ALTER TABLE pbMOVIE
	ADD CONSTRAINT PK_MOVIE
	PRIMARY KEY (pbMovie_ID)

ALTER TABLE pbFORMAT
	ADD CONSTRAINT PK_FORMAT
	PRIMARY KEY (pbFormat_ID)

ALTER TABLE pbMOVIEITEM
	ADD CONSTRAINT PK_MOVIEITEM
	PRIMARY KEY (pbMovieItem_ID)

ALTER TABLE pbRENTAL
	ADD CONSTRAINT PK_RENTAL
	PRIMARY KEY (pbRental_ID)

ALTER TABLE pbREQUEST
	ADD CONSTRAINT PK_REQUEST
	PRIMARY KEY (pbRequest_ID)

ALTER TABLE pbGENRE
	ADD CONSTRAINT PK_GENRE
	PRIMARY KEY (pbGenre_ID)

ALTER TABLE pbMOVIEGENRE
	ADD CONSTRAINT PK_MOVIEGENRE
	PRIMARY KEY (pbMovieGenre_ID)

ALTER TABLE pbKEYWORD
	ADD CONSTRAINT PK_KEYWORD
	PRIMARY KEY (pbKeyword_ID)

ALTER TABLE pbMOVIEKEYWORD
	ADD CONSTRAINT PK_MOVIEKEYWORD
	PRIMARY KEY (pbMovieKeyword_ID)

ALTER TABLE pbDIRECTOR
	ADD CONSTRAINT PK_DIRECTOR
	PRIMARY KEY (pbDirector_ID)

ALTER TABLE pbMOVIEDIRECTOR
	ADD CONSTRAINT PK_MOVIEDIRECTOR
	PRIMARY KEY (pbMovieDirector_ID)

ALTER TABLE pbACTOR
	ADD CONSTRAINT PK_ACTOR
	PRIMARY KEY (pbActor_ID)

ALTER TABLE pbMOVIEACTOR
	ADD CONSTRAINT PK_MOVIEACTOR
	PRIMARY KEY (pbMovieActor_ID)

-- batch create primary keys
GO

-- create foreign keys
ALTER TABLE pbPHONENO
	ADD CONSTRAINT FK_PHONENO_USER
	FOREIGN KEY (pbUser_ID) REFERENCES pbUSER(pbUser_ID)

ALTER TABLE pbBANNEDDESC
	ADD CONSTRAINT FK_BANNEDDESC_USER
	FOREIGN KEY (pbUser_ID) REFERENCES pbUSER(pbUser_ID)

ALTER TABLE pbUSERSECQA
	ADD CONSTRAINT FK_USERSECQA_USER
	FOREIGN KEY (pbUser_ID) REFERENCES pbUSER(pbUser_ID)

ALTER TABLE pbUSERSECQA
	ADD CONSTRAINT FK_USERSECQA_SECQUESTION
	FOREIGN KEY (pbSecQ_ID) REFERENCES pbSECQUESTION(pbSecQ_ID)

ALTER TABLE pbRENTAL
	ADD CONSTRAINT FK_RENTAL_USER
	FOREIGN KEY (pbUser_ID) REFERENCES pbUSER(pbUser_ID)

ALTER TABLE pbRENTAL
	ADD CONSTRAINT FK_RENTAL_MOVIEITEM
	FOREIGN KEY (pbMovieItem_ID) REFERENCES pbMOVIEITEM(pbMovieItem_ID)

ALTER TABLE pbREQUEST
	ADD CONSTRAINT FK_REQUEST_USER
	FOREIGN KEY (pbUser_ID) REFERENCES pbUSER(pbUser_ID)

ALTER TABLE pbREQUEST
	ADD CONSTRAINT FK_REQUEST_MOVIEITEM
	FOREIGN KEY (pbMovieItem_ID) REFERENCES pbMOVIEITEM(pbMovieItem_ID)

ALTER TABLE pbMOVIEITEM
	ADD CONSTRAINT FK_MOVIEITEM_MOVIE
	FOREIGN KEY (pbMovie_ID) REFERENCES pbMOVIE(pbMovie_ID)

ALTER TABLE pbMOVIEITEM
	ADD CONSTRAINT FK_MOVIEITEM_FORMAT
	FOREIGN KEY (pbFormat_ID) REFERENCES pbFORMAT(pbFormat_ID)

ALTER TABLE pbMOVIEGENRE
	ADD CONSTRAINT FK_MOVIEGENRE_MOVIE
	FOREIGN KEY (pbMovie_ID) REFERENCES pbMOVIE(pbMovie_ID)

ALTER TABLE pbMOVIEGENRE
	ADD CONSTRAINT FK_MOVIEGENRE_GENRE
	FOREIGN KEY (pbGenre_ID) REFERENCES pbGENRE(pbGenre_ID)

ALTER TABLE pbMOVIEKEYWORD
	ADD CONSTRAINT FK_MOVIEKEYWORD_MOVIE
	FOREIGN KEY (pbMovie_ID) REFERENCES pbMOVIE(pbMovie_ID)

ALTER TABLE pbMOVIEKEYWORD
	ADD CONSTRAINT FK_MOVIEKEYWORD_KEYWORD
	FOREIGN KEY (pbKeyword_ID) REFERENCES pbKEYWORD(pbKeyword_ID)

ALTER TABLE pbMOVIEDIRECTOR
	ADD CONSTRAINT FK_MOVIEDIRECTOR_DIRECTOR
	FOREIGN KEY (pbDirector_ID) REFERENCES pbDIRECTOR(pbDirector_ID)

ALTER TABLE pbMOVIEDIRECTOR
	ADD CONSTRAINT FK_MOVIEDIRECTOR_MOVIE
	FOREIGN KEY (pbMovie_ID) REFERENCES pbMOVIE(pbMovie_ID)

ALTER TABLE pbMOVIEACTOR
	ADD CONSTRAINT FK_MOVIEACTOR_ACTOR
	FOREIGN KEY (pbActor_ID) REFERENCES pbACTOR(pbActor_ID)

ALTER TABLE pbMOVIEACTOR
	ADD CONSTRAINT FK_MOVIEACTOR_MOVIE
	FOREIGN KEY (pbMovie_ID) REFERENCES pbMOVIE(pbMovie_ID)

-- batch create foreign keys
GO

-- create check constraints
